name: build_test_publish_armhf
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  release:
    types: [created]
  schedule:
    - cron:  '0 12 * * *'
jobs:
  build_test_publish_linux:
    name: ${{ matrix.python-version }} on linux-armhf
    runs-on: [self-hosted, ARM]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["python3.9",
                         "python3.7"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install prerequisites
      run: |
        sudo add-apt-repository -y ppa:deadsnakes/ppa
        sudo apt-get -y update
        sudo apt-get -y install python3-pip autoconf automake libtool pkg-config gettext libjson-c-dev
        sudo apt-get -y install libusb-1.0-0-dev libdbus-glib-1-dev libbluetooth-dev libnl-genl-3-dev flex bison
        sudo apt-get -y install python3.10 python3.9 python3.7 python3.6
        sudo apt-get -y install libpython3.6-dev libpython3.7-dev libpython3.8-dev libpython3.9-dev libpython3.10-dev
        sudo apt-get -y install python3.10-distutils python3.9-distutils python3.8-distutils python3.7-distutils

    - name: Install requirements
      run: |
        ${{ matrix.python-version }} -m pip install -r dev_requirements.txt

    - name: Build
      run: |
        ${{ matrix.python-version }} setup.py bdist_wheel

    - name: Display generated wheel name
      run: |
        ls dist/

    - name: Test and generate coverage report
      run: |
        ${{ matrix.python-version }} -m coverage run tests.py
        ${{ matrix.python-version }} -m coverage combine

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

    - name: Publish on Pypi
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: ${{ matrix.python-version }} -m twine upload --skip-existing dist/*.whl
