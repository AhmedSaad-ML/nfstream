name: build_test_publish_windows
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  release:
    types: [created]
  schedule:
    - cron:  '0 12 * * *'
jobs:
  build_test_publish_windows:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.10",
                         "3.9",
                         "3.8",
                         "3.7",
                         "3.6"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup py-${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: git unzip mingw-w64-x86_64-toolchain automake1.16 automake-wrapper autoconf libtool make mingw-w64-x86_64-json-c mingw-w64-x86_64-crt-git

    - name: Install requirements
      run: |
         python -m pip install --upgrade pip
         python -m pip install -r dev_requirements.txt

    - name: Install NPCAP OEM
      run: |
         choco install wget --no-progress
         wget --user ${{ secrets.NPCAP_OEM_USERNAME }} --password ${{ secrets.NPCAP_OEM_PASSWORD }} https://npcap.org/oem/dist/npcap-1.60-oem.exe
         Start-Process npcap-1.60-oem.exe -ArgumentList "/loopback_support=yes /winpcap_mode=yes /dot11_support=yes /S" -wait

    - name: Prepare
      run: |
        python prepare.py

    - name: Build
      env:
        # We set the location for msys64 path
        MSYS2_NFSTREAM_LOCATION: D:/a/_temp/msys64
      run: |
        python -m pip install .
        python -m pip wheel --no-deps --wheel-dir=dist .

    - name: Upload generated wheel
      uses: actions/upload-artifact@v3
      with:
        name: generated_wheel
        path: |
          dist/nfstream-*.whl
        retention-days: 1

    - name: Test
      # On other versions then 3.10, we test only. (without coverage generation)
      if: startsWith(matrix.python-version, 'py') && !startsWith(matrix.python-version, '3.10')
      run: |
        python tests.py

    - name: Test and generate coverage report
      # On version 3.10, we test and generate coverage report.
      if: startsWith(matrix.python-version, '3.10')
      run: |
        python -m coverage run -m unittest tests.py
        python -m coverage combine

    - name: Upload coverage to Codecov
      if: startsWith(matrix.python-version, '3.10')
      uses: codecov/codecov-action@v1

    - name: Publish on Pypi
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload --skip-existing dist/nfstream-*.whl
