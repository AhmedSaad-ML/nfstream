name: build_test_publish_windows
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  release:
    types: [created]
  schedule:
    - cron:  '0 12 * * *'
jobs:
  build_test_publish_windows:
    name: ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.10",
                         "3.9",
                         "3.8",
                         "3.7",
                         "3.6"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: git mingw-w64-x86_64-toolchain automake1.16 automake-wrapper autoconf libtool make mingw-w64-x86_64-json-c mingw-w64-x86_64-crt-git

    - name: Print Python version
      run: |
        python -c "import sys; print(sys.version)"

    - name: Install NFStream requirements
      run: |
         python -m pip install -r dev_requirements.txt

    - name: Install NPCAP
      run: |
         choco install wget --no-progress
         wget --user ${{ secrets.NPCAP_OEM_USERNAME }} --password ${{ secrets.NPCAP_OEM_PASSWORD }} https://npcap.org/oem/dist/npcap-1.60-oem.exe
         Start-Process npcap-1.60-oem.exe -ArgumentList "/loopback_support=yes /winpcap_mode=yes /dot11_support=yes /S" -wait

    - name: Build and install libgpg-error
      run: |
         msys2 -c 'git clone --branch libgpg-error-1.42 https://github.com/gpg/libgpg-error'
         cd libgpg-error
         msys2 -c './autogen.sh'
         msys2 -c './configure -enable-maintainer-mode --enable-static --enable-shared --with-pic --disable-doc --disable-nls'
         msys2 -c 'make'
         msys2 -c 'make install'
         msys2 -c 'cd ..'
         msys2 -c 'rm -rf libgpg-error/'

    - name: Build and install libgcrypt
      run: |
         msys2 -c 'git clone --branch libgcrypt-1.8.8 https://github.com/gpg/libgcrypt'
         cd libgcrypt
         msys2 -c './autogen.sh'
         msys2 -c './configure -enable-maintainer-mode --enable-static --enable-shared --with-pic --disable-doc'
         msys2 -c 'make'
         msys2 -c 'make install'
         msys2 -c 'cd ..'
         msys2 -c 'rm -rf libgcrypt/'

    - name: Build and install nDPI
      run: |
         msys2 -c 'git clone --branch dev https://github.com/ntop/nDPI.git'
         cd nDPI
         msys2 -c './autogen.sh --with-local-libgcrypt --enable-tls-sigs'
         msys2 -c 'make all'
         New-Item -Path "..\nfstream\engine\" -Name "ndpi_includes" -ItemType "directory"
         msys2 -c 'cp -a src/include/. ../nfstream/engine/ndpi_includes/'
         msys2 -c 'ls src/lib/'
         msys2 -c 'cp src/lib/libndpi.a ../nfstream/engine/libndpi.a'
         msys2 -c 'cd ..'
         msys2 -c 'rm -rf nDPI/'

    - name: Build NFStream
      run: |
         cd nfstream
         cd engine
         msys2 -c 'gcc -Indpi_includes -shared -o engine_cc.so -g -O2 -Wall engine_cc.c libndpi.a D:/a/_temp/msys64/mingw64/lib/libgcrypt.a D:/a/_temp/msys64/mingw64/lib/libgpg-error.a D:/a/_temp/msys64/mingw64/lib/libws2_32.a'
         msys2 -c 'rm -rf ndpi_includes/'
         cd ..
         cd ..
         python setup.py bdist_wheel

    - name: Test NFStream
      run: python -m coverage run tests.py

    - name: Generate coverage report
      run: python -m coverage combine

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

    - name: Publish on Pypi
      if: startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload --skip-existing dist/*.whl
